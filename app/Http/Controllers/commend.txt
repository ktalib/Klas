### ✅ Objective:

Automate the following multi-step process using a reusable helper file. Integrate this logic into the `PrimaryFormController`.

---

### 🔁 Step 1: Generate Unique Sectional Title File Number

* Format: `ST/{year}/{sequence_number}`
  Example: `ST/2025/001`
* Logic:

  * Use current year (`$currentYear`)
  * Increment the last used sequence number for the current year
  * Format sequence with leading zeros (`str_pad($nextNumber, 3, '0', STR_PAD_LEFT)`)

📝 Insert into `Sectional_Title_File_Numbers` (avoid duplicates):

| Column            | Value                            |
| ----------------- | -------------------------------- |
| `file_number`     | Generated `sectionalTitleFileNo` |
| `year`            | Current year                     |
| `sequence_number` | Incremented number               |
| `application_id`  | `$applicationId`                 |
| `is_active`       | `1`                              |
| `remarks`         | `"Mother Application"`           |
| `created_by`      | `$createdBy`                     |
| `created_at`      | `now()`                          |
| `updated_at`      | `now()`                          |

---

### 🔁 Step 2: Insert File Numbers Into `fileNumber` Table

* Process values based on **active tab**
* Avoid inserting duplicate rows

| Column            | Value              |
| ----------------- | ------------------ |
| `application_id`  | `$applicationId`   |
| `kangisFileNo`    | `$kangisFileNo`    |
| `mlsfNo`          | `$mlsFileNo`       |
| `NewKANGISFileNo` | `$newKangisFileNo` |
| `location`        | `NULL`        |
| `created_at`      | `now()`            |
| `updated_at`      | `now()`            |

---

### 🔁 Step 3: Insert into `eRegistry` Table

* Store both KANGIS file numbers and Sectional Title File No

```php
[
  'application_id' => $applicationId,
  'MLSFileNo' => $mlsFileNo,
  'KANGISFileNo' => $kangisFileNo,
  'NEWKangisFileNo' => $newKangisFileNo,
  'Sectional_Title_File_No' => $sectionalTitleFileNo,
  'Commissioning_Date' => now(),
  'Decommissioning_Date' => now(),
  'Site_Plan_Approval' => null,
  'Survey_Plan_Approval' => null,
  'Expected_Return_Date' => null,
  'Current_Office' => null,
  'created_by' => $createdBy,
  'modify_by' => null,
  'created_at' => now(),
  'updated_at' => now()
]
```

---

### 🔁 Step 4: Insert Buyer List from JSON Form Inputs

* Extract from form inputs like:
  `records[0][buyerName]`, `records[0][unit_no]`, `records[0][unitMeasurement]`

* For each record:

  1. Insert into `buyer_list`:

     ```php
     [
       'application_id' => $applicationId,
       'unit_measurement_id' => $unitMeasurementId, // from next step
       'buyer_name' => $buyerName,
       'unit_no' => $unitNo,
       'created_at' => now(),
       'updated_at' => now()
     ]
     ```
  2. Then insert into `st_unit_measurements` using the newly inserted `buyer_id`:

     ```php
     [
       'application_id' => $applicationId,
       'buyer_id' => $buyerId,
       'section_no' => $sectionNo,
       'measurement' => $unitMeasurement,
       'created_at' => now(),
       'updated_at' => now()
     ]
     ```

---

### 🛠 Suggested Improvements

* Create a **Helper class**, e.g., `SectionalTitleHelper.php`, and place reusable logic there.
* In `PrimaryFormController`, call methods like:

  ```php
  SectionalTitleHelper::generateAndInsertFileNumber($applicationId, $createdBy, $data);
  SectionalTitleHelper::insertBuyers($applicationId, $records);
 
